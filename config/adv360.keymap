
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

#define TD_BEHAVIOR(name, first, second) \
    name: name { \
        compatible = "zmk,behavior-tap-dance"; \
        #binding-cells = <0>; \
        tapping-term-ms = <240>; \
        bindings = <&kp first>, <&kp second>; \
    };

/ {
  behaviors {
    #include "macros.dtsi"
    #include "version.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <160>;
        quick_tap_ms = <150>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };

    TD_BEHAVIOR(td_f1, CAPS, F1)
    TD_BEHAVIOR(td_f2, N1, F2)
    TD_BEHAVIOR(td_f3, N2, F3)
    TD_BEHAVIOR(td_f4, N3, F4)
    TD_BEHAVIOR(td_f5, N4, F5)
    TD_BEHAVIOR(td_f6, N5, F6)
    TD_BEHAVIOR(td_f7, N6, F7)
    TD_BEHAVIOR(td_f8, N7, F8)
    TD_BEHAVIOR(td_f9, N8, F9)
    TD_BEHAVIOR(td_f10, N9, F10)
    TD_BEHAVIOR(td_f11, N0, F11)
    TD_BEHAVIOR(td_f12, PSCRN, F12)
  };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
       &td_f1            &td_f2      &td_f3            &td_f4              &td_f5  &td_f6               &tog 1                                                                   &mo 3  &td_f7            &td_f8             &td_f9          &td_f10               &td_f11  &td_f12
       &kp TAB            &kp Q       &kp W             &kp E               &kp R   &kp T                &none                                                                   &none   &kp Y             &kp U              &kp I           &kp O                &kp P    &kp BACKSLASH
       &kp ESC  &hm LEFT_META A  &hm LALT S  &hm LEFT_SHIFT D  &hm LEFT_CONTROL F   &kp G               &tog 4  &kp HOME  &kp END                  &kp PG_UP  &kp PG_DN          &none   &kp H       &hm RCTRL J       &hm RSHIFT K  &hm LEFT_ALT L  &hm RMETA SEMICOLON          &kp SQT
     &kp EQUAL            &kp Z       &kp X             &kp C               &kp V   &kp B                                   &none                      &none                             &kp N             &kp M          &kp COMMA         &kp DOT             &kp FSLH        &kp MINUS
 &kp LA(SPACE)        &kp GRAVE       &none          &kp LEFT           &kp RIGHT                    &kp SPACE   &kp DEL    &mo 2                    &kp DEL  &kp ENTER  &kp BACKSPACE          &kp LEFT_BRACKET  &kp RIGHT_BRACKET        &kp LBKT             &kp RBKT            &mo 2
            >;
        };

        layer_keypad {
            bindings = <
 &kp EQUAL     &kp N1    &kp N2    &kp N3     &kp N4  &kp N5               &trans                                                                     &mo 3  &kp N6  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
   &kp TAB      &kp Q     &kp W     &kp E      &kp R   &kp T                &none                                                                     &none   &kp Y   &kp KP_N7     &kp KP_N8      &kp KP_N9     &kp KP_MINUS   &kp BSLH
   &kp ESC      &kp A     &kp S     &kp D      &kp F   &kp G                &none  &kp LCTRL  &kp LALT                   &kp LGUI  &kp RCTRL          &none   &kp H   &kp KP_N4     &kp KP_N5      &kp KP_N6      &kp KP_PLUS    &kp SQT
 &kp LSHFT      &kp Z     &kp X     &kp C      &kp V   &kp B                                  &kp HOME                  &kp PG_UP                             &kp N   &kp KP_N1     &kp KP_N2      &kp KP_N3     &kp KP_ENTER  &kp RSHFT
     &mo 2  &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT                    &kp SPACE    &kp DEL   &kp END                  &kp PG_DN  &kp ENTER  &kp BACKSPACE              &kp UP      &kp DOWN     &kp KP_DOT        &kp KP_N0      &mo 2
            >;
        };

        layer_fn {
            bindings = <
 &kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6            &tog 1                                                                               &mo 3          &kp F7          &kp F8        &kp F9          &kp F10  &kp F11  &kp F12
 &trans  &trans  &trans  &trans  &trans  &trans             &none                                                                               &none          &trans          &trans        &trans           &trans   &trans   &trans
 &trans  &trans  &trans  &trans  &trans  &trans             &none  &trans  &trans                  &macro_half_page_up  &macro_half_page_down   &none  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW   &trans   &trans
 &trans  &trans  &trans  &trans  &trans  &trans                            &trans                               &trans                                         &trans          &trans        &trans           &trans   &trans   &trans
 &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans                               &trans                 &trans  &trans                          &trans        &trans           &trans   &trans   &trans
            >;
        };

        layer_mod {
            bindings = <
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                  &none                                                                          &trans   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none            &bootloader                                                                     &bootloader   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none                  &none   &none   &none                  &bt BT_CLR       &none  &rgb_ug RGB_MEFS_CMD 5   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none    &macro_ver         &none                                  &none                       &none                                       &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none                                &none   &none   &none                       &none  &bl BL_TOG         &rgb_ug RGB_TOG          &bl BL_INC  &bl BL_DEC   &none   &none   &none
            >;
        };

        layer_GAME {
            bindings = <
 &trans          &kp N5   &kp N1  &kp N2        &kp N3  &kp N4            &trans                                                  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans         &kp F14    &kp Q   &kp W         &kp E   &kp R            &trans                                                  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &kp LEFT_SHIFT    &kp A   &kp S         &kp D   &kp F            &trans   &kp T  &trans                  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans       &kp LCTRL    &kp Z   &kp X         &kp C   &kp V                            &trans                  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
 &trans          &trans  &kp F15  &trans  &kp LEFT_ALT                    &trans   &kp G   &kp B                  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };

    };
};
